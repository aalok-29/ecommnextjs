{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport baseUrl from '../helpers/baseUrl';\nimport { parseCookies } from 'nookies';\nimport cookie from 'js-cookie';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\n\nvar Cart = function Cart(_ref) {\n  var error = _ref.error,\n      products = _ref.products;\n\n  var _parseCookies = parseCookies(),\n      token = _parseCookies.token;\n\n  var router = useRouter();\n\n  var _useState = useState(products),\n      cProducts = _useState[0],\n      setCartProduct = _useState[1];\n\n  var price = 0;\n\n  if (!token) {\n    return __jsx(\"div\", {\n      className: \"center-align\"\n    }, __jsx(\"h3\", null, \"please login to view your cart\"), __jsx(Link, {\n      href: \"/login\"\n    }, __jsx(\"a\", null, __jsx(\"button\", {\n      className: \"btn #1565c0 blue darken-3\"\n    }, \"Login\"))));\n  }\n\n  if (error) {\n    M.toast({\n      html: error,\n      classes: \"red\"\n    });\n    cookie.remove(\"user\");\n    cookie.remove(\"token\");\n    router.push('/login');\n  }\n\n  var handleRemove = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pid) {\n      var res, res2;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(baseUrl, \"/api/cart\"), {\n                method: \"DELETE\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"Authorization\": token\n                },\n                body: JSON.stringify({\n                  productId: pid\n                })\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              res2 = _context.sent;\n              setCartProduct(res2);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleRemove(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var CartItems = function CartItems() {\n    return __jsx(React.Fragment, null, cProducts.map(function (item) {\n      price = price + item.quantity * item.product.price;\n      return __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          margin: \"20px\"\n        },\n        key: item._id\n      }, __jsx(\"img\", {\n        src: item.product.mediaUrl,\n        style: {\n          width: \"30%\"\n        }\n      }), __jsx(\"div\", {\n        style: {\n          marginLeft: \"20px\"\n        }\n      }, __jsx(\"h6\", null, item.product.name), __jsx(\"h6\", null, item.quantity, \" x  \\u20B9 \", item.product.price), __jsx(\"button\", {\n        className: \"btn red\",\n        onClick: function onClick() {\n          handleRemove(item.product._id);\n        }\n      }, \"remove\")));\n    }));\n  };\n\n  var handleCheckout = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(paymentInfo) {\n      var res, res2;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(paymentInfo);\n              _context2.next = 3;\n              return fetch(\"\".concat(baseUrl, \"/api/payment\"), {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"Authorization\": token\n                },\n                body: JSON.stringify({\n                  paymentInfo: paymentInfo\n                })\n              });\n\n            case 3:\n              res = _context2.sent;\n              _context2.next = 6;\n              return res.json();\n\n            case 6:\n              res2 = _context2.sent;\n              M.toast({\n                html: res2.mesage,\n                classes: \"green \"\n              });\n              router.push('/');\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleCheckout(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var TotalPrice = function TotalPrice() {\n    return __jsx(\"div\", {\n      className: \"container\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      }\n    }, __jsx(\"h5\", null, \"total \\u20B9 \", price), products.length != 0 && __jsx(StripeCheckout, {\n      name: \"My store\",\n      amount: price * 100,\n      image: products.length > 0 ? products[0].product.mediaUrl : \"\",\n      currency: \"INR\",\n      shippingAddress: true,\n      billingAddress: true,\n      zipCode: true,\n      stripeKey: \"pk_test_51H6fgDEta3rHzkPYGgIOQZSFrukEzAl71AOnyAUjyGR8uJPDaGfALQYWre4F5g0Quyh9d7PTphh56SmUlhtsQYmd00DZwB9gMj\",\n      token: function token(paymentInfo) {\n        return handleCheckout(paymentInfo);\n      }\n    }, __jsx(\"button\", {\n      className: \"btn\"\n    }, \"Checkout\")));\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(CartItems, null), __jsx(TotalPrice, null));\n};\n\nexport var __N_SSP = true;\nexport default Cart;","map":null,"metadata":{},"sourceType":"module"}