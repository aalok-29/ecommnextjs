{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport baseUrl from '../helpers/baseUrl';\nimport { parseCookies } from 'nookies';\n\nconst Create = () => {\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: price,\n    1: setPrice\n  } = useState(\"\");\n  const {\n    0: media,\n    1: setMedia\n  } = useState(\"\");\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const mediaUrl = await imageUpload();\n      const res = await fetch(`${baseUrl}/api/products`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          price,\n          mediaUrl,\n          description\n        })\n      });\n      const res2 = await res.json();\n\n      if (res2.error) {\n        M.toast({\n          html: res2.error,\n          classes: \"red\"\n        });\n      } else {\n        M.toast({\n          html: \"Product saved\",\n          classes: \"green\"\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const imageUpload = async () => {\n    const data = new FormData();\n    data.append('file', media);\n    data.append('upload_preset', \"mystore\");\n    data.append('cloud_name', \"cnq\");\n    const res = await fetch(\"\thttps://api.cloudinary.com/v1_1/cnq/image/upload\", {\n      method: \"POST\",\n      body: data\n    });\n    const res2 = await res.json();\n    return res2.url;\n  };\n\n  return __jsx(\"form\", {\n    className: \"container\",\n    onSubmit: e => handleSubmit(e)\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    placeholder: \"Price\",\n    value: price,\n    onChange: e => {\n      setPrice(e.target.value);\n    }\n  }), __jsx(\"div\", {\n    className: \"file-field input-field\"\n  }, __jsx(\"div\", {\n    className: \"btn #1565c0 blue darken-3\"\n  }, __jsx(\"span\", null, \"File\"), __jsx(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: e => setMedia(e.target.files[0])\n  })), __jsx(\"div\", {\n    className: \"file-path-wrapper\"\n  }, __jsx(\"input\", {\n    className: \"file-path validate\",\n    type: \"text\"\n  }))), __jsx(\"img\", {\n    className: \"responsive-img\",\n    src: media ? URL.createObjectURL(media) : \"\"\n  }), __jsx(\"textarea\", {\n    name: \"description\",\n    placeholder: \"Description\",\n    value: description,\n    onChange: e => {\n      setDescription(e.target.value);\n    },\n    className: \"materialize-textarea\"\n  }), __jsx(\"button\", {\n    className: \"btn waves-effect waves-light #1565c0 blue darken-3\",\n    type: \"submit\"\n  }, \"Submit\", __jsx(\"i\", {\n    className: \"material-icons right\"\n  }, \"send\")));\n};\n\nexport async function getServerSideProps(ctx) {\n  const cookie = parseCookies(ctx);\n  const user = cookie.user ? JSON.parse(cookie.user) : \"\";\n\n  if (user.role == 'user' || user.role == '') {\n    const {\n      res\n    } = ctx;\n    res.writeHead(302, {\n      Location: \"/\"\n    });\n    res.end();\n  }\n\n  return {\n    props: {}\n  };\n}\nexport default Create;","map":null,"metadata":{},"sourceType":"module"}