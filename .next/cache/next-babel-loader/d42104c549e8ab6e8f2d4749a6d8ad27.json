{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { parseCookies } from 'nookies';\nimport baseUrl from '../helpers/baseUrl';\n\nfunction UserRoles() {\n  var _useState = useState([]),\n      users = _useState[0],\n      setUsers = _useState[1];\n\n  var _parseCookies = parseCookies(),\n      token = _parseCookies.token;\n\n  useEffect(function () {\n    fetchUser();\n  }, []);\n\n  var fetchUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, res2;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(baseUrl, \"/api/users\"), {\n                headers: {\n                  \"Authorization\": token\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              res2 = _context.sent;\n              console.log(res2);\n              setUsers(res2);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleRole = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_id, role) {\n      var res, res2, updatedUsers;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"\".concat(baseUrl, \"/api/users\"), {\n                method: \"PUT\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"Authorization\": token\n                },\n                body: JSON.stringify({\n                  _id: _id,\n                  role: role\n                })\n              });\n\n            case 2:\n              res = _context2.sent;\n              _context2.next = 5;\n              return res.json();\n\n            case 5:\n              res2 = _context2.sent;\n              console.log(res2); // setUsers(res2)\n\n              updatedUsers = users.map(function (user) {\n                if (user.role != res2.role && user.email == res2.email) {\n                  return res2;\n                } else {\n                  return user;\n                }\n              });\n              setUsers(updatedUsers);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleRole(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, \"User roles\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Email\"), __jsx(\"th\", null, \"Role\"))), __jsx(\"tbody\", null, users.map(function (item) {\n    return __jsx(\"tr\", null, __jsx(\"td\", null, item.name), __jsx(\"td\", null, item.email), __jsx(\"td\", {\n      onClick: function onClick() {\n        return handleRole(item._id, item.role);\n      }\n    }, item.role));\n  }))));\n}\n\nexport default UserRoles;","map":null,"metadata":{},"sourceType":"module"}