{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { parseCookies } from 'nookies';\nimport baseUrl from '../helpers/baseUrl';\n\nfunction UserRoles() {\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  const {\n    token\n  } = parseCookies();\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  const fetchUser = async () => {\n    const res = await fetch(`${baseUrl}/api/users`, {\n      headers: {\n        \"Authorization\": token\n      }\n    });\n    const res2 = await res.json();\n    console.log(res2);\n    setUsers(res2);\n  };\n\n  const handleRole = async (_id, role) => {\n    const res = await fetch(`${baseUrl}/api/users`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      },\n      body: JSON.stringify({\n        _id,\n        role\n      })\n    });\n    const res2 = await res.json();\n    console.log(res2); // setUsers(res2)\n\n    const updatedUsers = users.map(user => {\n      if (user.role != res2.role && user.email == res2.email) {\n        return res2;\n      } else {\n        return user;\n      }\n    });\n    setUsers(updatedUsers);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, \"User roles\"), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Email\"), __jsx(\"th\", null, \"Role\"))), __jsx(\"tbody\", null, users.map(item => {\n    return __jsx(\"tr\", null, __jsx(\"td\", null, item.name), __jsx(\"td\", null, item.email), __jsx(\"td\", {\n      onClick: () => handleRole(item._id, item.role)\n    }, item.role));\n  }))));\n}\n\nexport default UserRoles;","map":null,"metadata":{},"sourceType":"module"}